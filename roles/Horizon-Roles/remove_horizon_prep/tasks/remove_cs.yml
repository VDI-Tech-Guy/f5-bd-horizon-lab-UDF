---

- name: Obtain information about a registry key using short form
  ansible.windows.win_reg_stat:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall
  register: current_version

# - debug:
#     var: current_version

- name: Obtain information about a registry key using short form
  ansible.windows.win_reg_stat:
    path: "HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{{ item }}"
  register: current_version_2
  with_items: "{{ current_version.sub_keys }}"
  when: ("{" in item)

# - debug:
#     var: item
#   when: (item.properties.Publisher.raw_value is defined) and ("VMware" in item.properties.Publisher.raw_value)
#   with_items: "{{current_version_2.results }}"

# - debug:
#     var: item.item
#   when: (item.properties.Publisher.raw_value is defined) and ("VMware" in item.properties.Publisher.raw_value) and (item.properties.DisplayName is not defined)
#   with_items: "{{current_version_2.results }}"

# - debug:
#     var: item.item
#   when: (item.properties.Publisher.raw_value is defined) and ("VMware" in item.properties.Publisher.raw_value) and (item.properties.DisplayName is defined)
#   with_items: "{{current_version_2.results }}"

- name: Remove Horizon Sub_Component
  ansible.windows.win_package:
    product_id: "{{ item.item }}"
    state: absent
  become: true
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  vars:
    ansible_become_user: "{{ansible_user}}"
    ansible_become_pass: "{{ansible_password}}"
    ansible_winrm_kerberos_delegation: True
  when: (item.properties.Publisher.raw_value is defined) and ("VMware" in item.properties.Publisher.raw_value) and (item.properties.DisplayName is not defined)
  with_items: "{{current_version_2.results }}"

- name: Remove Horizon Main Installer
  ansible.windows.win_package:
    product_id: "{{ item.item }}"
    state: absent
  become: true
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  vars:
    ansible_become_user: "{{ansible_user}}"
    ansible_become_pass: "{{ansible_password}}"
    ansible_winrm_kerberos_delegation: True
  when: (item.properties.Publisher.raw_value is defined) and ("VMware" in item.properties.Publisher.raw_value) and (item.properties.DisplayName is defined)
  with_items: "{{current_version_2.results }}"

- name: Remove Broker-02 ADAM
  ansible.windows.win_package:
    # path: C:\Windows\ADAM\adamuninstall.exe
    product_id: "ADAM_VMwareVDMDS$0"
    arguments: 
      - /q
      - /force
      # - /i:VMwareVDMDS
    state: absent
  become: true
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  vars:
    ansible_become_user: "{{ansible_user}}"
    ansible_become_pass: "{{ansible_password}}"
    ansible_winrm_kerberos_delegation: True
  when: "'2' in inventory_hostname"

- name: Remove Broker-01 ADAM
  ansible.windows.win_package:
    product_id: "ADAM_VMwareVDMDS$0"
    arguments: 
      - /q
      - /force
    state: absent
  become: true
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  vars:
    ansible_become_user: "{{ansible_user}}"
    ansible_become_pass: "{{ansible_password}}"
    ansible_winrm_kerberos_delegation: True
  when: "'1' in inventory_hostname"

- name: Remove Visual Studio Runtimes
  ansible.windows.win_package:
    product_id: "{{ item.item }}"
    state: absent
    arguments: 
      - /q
      - /uninstall
  become: true
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  vars:
    ansible_become_user: "{{ansible_user}}"
    ansible_become_pass: "{{ansible_password}}"
    ansible_winrm_kerberos_delegation: True
  when: (item.properties.Publisher.raw_value is defined) and (item.properties.DisplayName.raw_value is defined) and ("Microsoft" in item.properties.Publisher.raw_value) and ("Runtime" in item.properties.DisplayName.raw_value)
  with_items: "{{current_version_2.results }}"